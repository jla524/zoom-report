name: CI

on: [push, pull_request]

jobs:
  analyze:
    name: static type check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Copy sample .env
      run: cp .env.example .env
    - name: Run pytest
      run: poetry run analyze

  linter:
    name: mypy linter
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Copy sample .env
      run: cp .env.example .env
    - name: Run pytest
      run: poetry run lint

  test:
    name: unit tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Copy sample .env
      run: cp .env.example .env
    - name: Run pytest
      run: poetry run test
